/*
最长公共子序列
*/

/*
用L[i][j]表示子序列Xi 和 Yj 的最长公共子序列的长度

	当Xi = Yj 时，找出Xi-1和 Yj-1的最长公共子序列，然后在其尾部加上Xi即可得到X和Y的最长公共子序列

	当Xi != Yj 时，求解两个问题：①求 Xi-1和Yj的最长公共子序列； ②求Xi和Yj-1的最长公共子序列。然后取其中最大值

	if (str1[i - 1] == str2[j - 1])
				dp[i][j] = dp[i - 1][j] + 1;
			else
				dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
*/

#include <bits/stdc++.h>
using namespace std;
int dp[1005][1005];
string str1,str2;
int LCS() {
	memeset(dp, 0, sizeof(dp));
	for(int i=1;i<=str1.length();i++)
		for (int j = 1; j <= str2.length(); j++) {
			if (str1[i - 1] == str2[j - 1])
				dp[i][j] = dp[i - 1][j] + 1;
			else
				dp[i][j] = max(dp[i - 1][j], dp[i][j - 1]);
		}
	return dp[str1.length()][str2.length()];
 }
int main() {
	while (cin >> str1 >> str2)
		cout << LCS() << end l;
	return 0;
}
