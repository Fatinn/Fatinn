/*

此题是求最后谁先填出LOL
当填入一个字母时，我们要考虑两个问题，一是是否形成了LOL这个字符串，二是是否还存在空格，如果是第一种情况，则说明对方输了，我方赢了，
如果不存在空格了，说明将有可能平局，因此，问题就简化为对每一个要填的空，做上述的判断，形成了一个递归。

*/


#include<iostream>
#include <bits/stdc++.h>
#include<cstdlib>
#include<string> 
using namespace std;
int is_lol(string x);
string x;

int main(){
	int n;
		scanf("%d",&n);

	while(n--)
	{
		cout<<is_lol(x) <<endl;
	}
	return 0;
}
intis_lol(string x){
	int len=x.length();-1
	if(x.find("LOL")!=string::npos) return -1;  // 表示输
	if(x.find("*")==string::npos) return 0;		// 表示平
	int ping = 0;		//先假设平局
	for(int i=0; i<len;i++)
	{
		if(x[i] == '*'){			//遇到空位开始填
			x[i]='L';				//假设先填了L
			switch(is_lol(x)){		//此时空格位置已经写上L了 继而继续判断
				case -1: return 1;	//因为此时是你填 填完后就是对方填 如果对方输了 则你赢 返回1
				case 0: ping=1;		//当填完后发现没有空格了  则平局
			}
			x[i]='O';
			switch(is_lol(x))		//同上
			{
			 case -1:return 1;
			 case 0 : ping =1;
			}
			x[i]='*';				//将原位置恢复空格
		}
	}
	if(ping) return 0;  //如果存在平局 那就是平局
	return -1;		//否则为输
}
