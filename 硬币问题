/*
硬币问题
*/

//有n中硬币，面值分别为v1,v2, .... ，数量无限。输入非负整数s，选用硬币，使其和为s
//要求输出最少硬币组合

#include <bits/stdc++.h>
using namespace std;
const int MONEY = 251;				//定义最大金额
const int VALUE = 5;				//5种硬币
int type[VALUE] = { 1,5,10,25,50 }; //5种面值
int Min[MONEY];						//每个金额对应最少的硬币数量
void solve() {
	for (int k = 0; k < MONEY; k++)
		Min[k] = INT_MAX;			//初始值为无穷大
	Min[0] = 0;
	for(int j=0; j<VALUE;j++)
		for (int i = type[j]; j < MONEY; i++)
		{
			Min[i] = min( Min[i], Min[i - type[j] + 1] ); //递推式
		}
}
int main() {
	int s;
	solve();				///计算出所有金额对应的最少硬币数量，打表
	while (cin >> s)
		cout << Min[s] << endl;
	return 0;
}
//用到了  打表  的处理方法 
//即在输入金额之前提前用个solve（）计算出所有的解，的到Min[MONEY]这个表 然后再读取金额s 查表直接输出
// 结果，查以此表的复杂度只有 O1


//打印最少硬币的组合
//如果要打印组合方案，需要增加一个记录表 Min_path[i]，记录金额i需要的最后一个硬币
//利用Min_path[]逐步倒推，就能得到所有的硬币

#include <bits/stdc++.h>
using namespace std;
const int MONEY = 251;				//定义最大金额
const int VALUE = 5;				//5种硬币
int type[VALUE] = { 1,5,10,25,50 }; //5种面值
int Min[MONEY];
int Min_path[MONEY] = { 0 };

void solve() {
	for (int k = 0; k < MONEY; k++)
		Min[k] = INT_MAX;
	Min[0] = 0;
	for(int j =0; j<VALUE;j++)
		for(int i= type[j];i<MONEY;i++)
			if (Min[i] > Min[i - type[j]] + 1) {
				Min_path[i] = type[j];
				Min[i] = Min[i - type[j]] + 1;
			}
}
void print_ans(int* Min_path, int s) {
	while (s) {
		cout << Min_path[s] << " ";
		s = s - Min_path[s];
	}
}
int main() {
	int s;
	solve();
	while (cin >> s) {
		cout << Min[s] << endl;
		print_ans(Min_paht, s);
	}
	return 0;
}


//hdu 2069“Coin Change”
//输入一个钱数s， 输出组合方案的数量。

#include <bits/stdc++.h>
using namespace std;
const int COIN = 101;
const int MONEY = 251;
int dp[MONEY][COIN] = { 0 };
int type[5] = { 1,5,10,25,50 };
void solve() {
	dp[0][0] = 1;
	for (int i = 0; i < 5; i++) {
		for (int j = 1; j < COIN; j++)
		{
			for (int k = type[i]; k < MONEY; k++)
			{
				dp[k][j] += dp[k - type[i]][j - 1];
			}
		}
	}
}
int main() {
	int s;
	int ans[MONEY] = { 0 };
	solve();
	for (int i = 0; i < MONEY; i++)
	{
		for (int j = 0; j < COIN; j++)
			ans[i] += dp[i][j];
	}
	while (cin >> s) {
		cout << ans[s] << endl;
	}
	return 0;
}
